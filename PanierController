package controller;

import dao.HistoriqueActionDAO;
import model.Article;
import model.Client;
import model.HistoriqueAction;
import model.Panier;
import java.awt.Component;
// Controller gérant les actions du panier
public class PanierController {
    private Panier panier;
    private ArticleController articleController;
    private HistoriqueActionDAO historiqueActionDAO;

    public PanierController(Client client) {
        this.panier = new Panier(client);
        this.articleController = new ArticleController();
        this.historiqueActionDAO = new HistoriqueActionDAO();
    }

    // Ajoute un article au panier
    public boolean ajouterArticle(int articleId, int quantite, Component parent) {
        if (quantite <= 0) {// Vérifie que la quantité est positive
            return false;
        }

        Article article = articleController.getArticleById(articleId);// Récupére article
        if (article == null) {
            return false;
        }
        // Vérifie le stock
        if (article.getStock() < quantite) {
            return false;
        }
        // Vérifiez si la quantité dépasse le seuil de remise
        boolean remiseAppliquee = quantite >= article.getSeuilGros();
        panier.ajouterArticle(article, quantite); // Ajouter au panier
        // Enregistre l'action dans l'historique
        HistoriqueAction action = new HistoriqueAction(
                panier.getClient().getId(),
                "Ajout au panier : " + article.getNom() + " x " + quantite +
                        (remiseAppliquee ? " (avec remise)" : "")
        );
        historiqueActionDAO.ajouterAction(action);
        // Affiche message si remise appliquée
        if (remiseAppliquee && parent != null) {
            double economie = (article.getPrixUnitaire() - article.getPrixGros()) * quantite;
            String message = String.format(
                    "Félicitations ! <br><br>Vous avez bénéficié d'une remise sur <b>%s</b> !<br><br>" +
                            "Prix unitaire normal : <b>%.2f €</b><br>" +
                            "Prix unitaire remisé : <b>%.2f €</b><br><br>" +
                            "Vous économisez <b>%.2f €</b> au total !",
                    article.getNom(),
                    article.getPrixUnitaire(),
                    article.getPrixGros(),
                    economie
            );
            utils.SwingUtils.showSuccess(parent, message);
        }

        return true;
    }

    // Ajoute un article au panier (sans affichage de message)
    public boolean ajouterArticle(int articleId, int quantite) {
        return ajouterArticle(articleId, quantite, null);// Ajoute un article au panier (sans affichage de message)
    }
    
    public void supprimerArticle(int articleId) {
        Article article = articleController.getArticleById(articleId);  // Supprime un article du panier

        if (article != null) {
            panier.supprimerArticle(articleId);

            // Enregistrer l'action dans l'historique
            HistoriqueAction action = new HistoriqueAction(
                    panier.getClient().getId(),
                    "Suppression du panier : " + article.getNom()
            );
            historiqueActionDAO.ajouterAction(action);
        }
    }

    // Maj de la quantité d'un article dans le panier
    public boolean mettreAJourQuantite(int articleId, int quantite) {
        // Vérifier que la quantité est positive ou zéro 
        if (quantite < 0) {
            return false;
        }// Si la quantité est zéro on supp l'article
        if (quantite == 0) {
            supprimerArticle(articleId);
            return true;
        }// Récupérer l'article pour vérifier le stock
        Article article = articleController.getArticleById(articleId);
        if (article == null) {
            return false;
        }
        // Vérifier le stock
        if (article.getStock() < quantite) {
            return false;
        }// Maj de la quantité
        panier.mettreAJourQuantite(articleId, quantite);
        // Enregistre l'action dans l'historique
        HistoriqueAction action = new HistoriqueAction(
                panier.getClient().getId(),
                "Mise à jour du panier : " + article.getNom() + " - Quantité : " + quantite
        );
        historiqueActionDAO.ajouterAction(action);

        return true;
    }

    // Vide le panier
    public void viderPanier() {
        if (!panier.estVide()) {
            panier.vider();
            // Enregistrer l'action dans l'historique
            HistoriqueAction action = new HistoriqueAction(
                    panier.getClient().getId(),
                    "Vidage du panier"
            );
            historiqueActionDAO.ajouterAction(action);
        }
    }
    // Récupère le panier
    public Panier getPanier() {
        return panier;
    }
    // Calcule le montant total du panier
    public double calculerTotal() {
        return panier.calculerTotal();
    }
}
