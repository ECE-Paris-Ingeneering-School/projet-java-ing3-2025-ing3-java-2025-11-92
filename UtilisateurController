package controller;

import dao.HistoriqueActionDAO;
import dao.UtilisateurDAO;
import model.Administrateur;
import model.Client;
import model.HistoriqueAction;
import model.Utilisateur;

import java.util.List;

/**
 * Contrôleur gérant les actions liées aux utilisateurs
 */
public class UtilisateurController {
    private UtilisateurDAO utilisateurDAO;
    private HistoriqueActionDAO historiqueActionDAO;
    private static Utilisateur utilisateurConnecte;
    
    public UtilisateurController() {
        this.utilisateurDAO = new UtilisateurDAO();
        this.historiqueActionDAO = new HistoriqueActionDAO();
    }
    
    /**
     * Authentifie un utilisateur
     * @param email l'email de l'utilisateur
     * @param motDePasse le mot de passe
     * @return l'utilisateur authentifié ou null
     */
    public Utilisateur authentifier(String email, String motDePasse) {
        Utilisateur utilisateur = utilisateurDAO.authentifier(email, motDePasse);
        if (utilisateur != null) {
            utilisateurConnecte = utilisateur;
            
            // Enregistrer l'action dans l'historique
            HistoriqueAction action = new HistoriqueAction(utilisateur.getId(), "Connexion au système");
            historiqueActionDAO.ajouterAction(action);
        }
        return utilisateur;
    }
    
    /**
     * Inscrit un nouveau client
     * @param nom le nom du client
     * @param email l'email du client
     * @param motDePasse le mot de passe du client
     * @return le client créé ou null
     */
    public Client inscrireClient(String nom, String email, String motDePasse) {
        // Vérifier si l'email existe déjà
        if (utilisateurDAO.emailExiste(email)) {
            return null;
        }
        
        Client client = new Client();
        client.setNom(nom);
        client.setEmail(email);
        client.setMotDePasse(motDePasse);
        client.setEstAncienClient(false);
        
        if (utilisateurDAO.ajouterClient(client)) {
            // Authentifier directement le client après inscription
            return (Client) authentifier(email, motDePasse);
        }
        
        return null;
    }
    
    /**
     * Récupère tous les clients
     * @return la liste des clients
     */
    public List<Client> getAllClients() {
        return utilisateurDAO.getAllClients();
    }
    
    /**
     * Récupère un client par son ID
     * @param id l'identifiant du client
     * @return le client correspondant ou null
     */
    public Client getClientById(int id) {
        return utilisateurDAO.getClientById(id);
    }
    
    /**
     * Déconnecte l'utilisateur courant
     */
    public void deconnecter() {
        if (utilisateurConnecte != null) {
            // Enregistrer l'action dans l'historique
            HistoriqueAction action = new HistoriqueAction(utilisateurConnecte.getId(), "Déconnexion du système");
            historiqueActionDAO.ajouterAction(action);
            
            utilisateurConnecte = null;
        }
    }
    
    /**
     * Retourne l'utilisateur actuellement connecté
     * @return l'utilisateur connecté ou null
     */
    public static Utilisateur getUtilisateurConnecte() {
        return utilisateurConnecte;
    }
    
    /**
     * Vérifie si l'utilisateur connecté est un administrateur
     * @return true si c'est un administrateur
     */
    public static boolean estAdministrateur() {
        return utilisateurConnecte instanceof Administrateur;
    }
    
    /**
     * Vérifie si l'utilisateur connecté est un client
     * @return true si c'est un client
     */
    public static boolean estClient() {
        return utilisateurConnecte instanceof Client;
    }
}
